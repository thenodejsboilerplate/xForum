{{#extend "css"}}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/quill/1.3.7/quill.core.min.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/quill/1.3.7/quill.snow.css" rel="stylesheet">
<style>
  #editor {
    height: 375px;
    width: 90%;
    margin: 0 auto;
  }
  .ql-toolbar.ql-snow{
    width:90%!important;
    margin: 0 auto !important;
  }
</style>

{{/extend}}
<form method="post" action="/post/post" >
  <label>
  
  Title：<br />
  <input type="text" name="title" placeholder="title" />
  </label><br />

   <label>
  Tags：<br />
  <input type="text" name="tags" placeholder="use ',' to seperate between tags"/>
  </label> <br />

   <label>
  Category：<br />
  <select name="category">
    <option selected>Category 1</option>
    <option>Category 2</option>
    <option>Category 3</option>
    <option>Category 4</option>
  </select>
  </label> <br />

   <label>
  Introduction：<br />
  <input type="text" name="intro" placeholder="The introduction about the post, less than 200 words!"/>
  </label> <br />


 
  
  <label>
  Content：<br />
  <div  id="quill_editor"></div> <br>
  {{!-- <textarea name="content" rows="20" cols="100" placeholder="Content" id="editor"></textarea><br /> --}}
  </label>
   
  <input type="submit" value="POST"  id="formSave"/>
</form>

{{#extend "js"}}
	<script src="https://cdnjs.cloudflare.com/ajax/libs/quill/1.3.7/quill.min.js"></script>   

<!-- Initialize Quill editor -->
    <script>
 const editor = new Quill('#quill_editor', {
      modules: {
        toolbar: [
          [{ header: [1, 2, false] }],
          ['bold', 'italic', 'underline'],
          ['image', 'code-block']
        ]
      },
      placeholder: 'Free Write...',
      theme: 'snow'
    });

      /**
       * Step1. select local image
       *
       */
    function selectLocalImage() {
      const input = document.createElement('input');
      input.setAttribute('type', 'file');
      input.click();

      // Listen upload local image and save to server
      input.onchange = () => {
       const file = input.files[0];
        console.log('input' + JSON.stringify(input))       
        console.log('file: ' + JSON.stringify(file))

        // file type is only image.
        if (/^image\//.test(file.type)) {
          saveToServer(file);
        } else {
          console.warn('You could only upload images.');
        }
      };
    }

    /**
     * Step2. save to server
     *
     * @param {File} file
     */
    function saveToServer(file) {
      const fd = new FormData();
      fd.append('image', file);

      const xhr = new XMLHttpRequest();
      console.log('into xhr before .open..')
      xhr.open('POST', 'http://localhost:3000/post/upload/image', true);  
      xhr.onload = () => {
        if (xhr.status === 200) {
          // this is callback data: url
          const url = JSON.parse(xhr.responseText).data;
          insertToEditor(url);
        }
      };
      xhr.send(fd);
    }

    /**
     * Step3. insert image url to rich editor.
     *
     * @param {string} url
     */
    function insertToEditor(string) {
      // push image url to rich editor.
      const range = editor.getSelection();
      editor.insertEmbed(range.index, 'image', `http://localhost:9000${url}`);
    }

    // quill editor add image handler
    editor.getModule('toolbar').addHandler('image', () => {
      selectLocalImage();
    });











    </script>
{{/extend}}